package com.mvc.controller.admin;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.ModelAndView;

import com.mvc.common.Pagination;
import com.mvc.common.RequestSetAttribute;
import com.mvc.entity.Department;
import com.mvc.entity.Profession;
import com.mvc.entity.Settime;
import com.mvc.service.SettimeService;
import com.mvc.service.TbgradeService;

/**
 * 设置时间控制器类
 * @author huangzec@foxmail.com
 *
 */
@Controller
@RequestMapping(value="/admin/settime")
public class SettimeController {
	
	@Autowired
	private SettimeService settimeService;
	
	@Autowired
	private TbgradeService tbgradeService;
	
	private Pagination pagination;
	private List<Settime> list = new ArrayList<Settime>();
	
	private int pageNum = 1;//页数
	private int numPerPage = 10;//每页显示多少条
	
	public Pagination getPagination() {
		return pagination;
	}

	public void setPagination(Pagination pagination) {
		this.pagination = pagination;
	}

	public List<Settime> getList() {
		return list;
	}

	public void setList(List<Settime> list) {
		this.list = list;
	}

	public int getPageNum() {
		return pageNum;
	}

	public void setPageNum(int pageNum) {
		this.pageNum = pageNum;
	}

	public int getNumPerPage() {
		return numPerPage;
	}

	public void setNumPerPage(int numPerPage) {
		this.numPerPage = numPerPage;
	}

	/**
	 * 设置提交课题时间
	 *  
	 * @Description  
	 * @author huangzec@foxmail.com
	 * @date 2014-7-16 下午09:11:11
	 * @return ModelAndView
	 */
	@RequestMapping(value="/setsubmit.do")
	public ModelAndView setSubmit(HttpServletRequest request, HttpServletResponse response)
	{
		ModelAndView mav = new ModelAndView();
		Department department = (Department) request.getSession().getAttribute("department");
		String where = "from Tbgrade where 1 = 1 AND deptId = '" + department.getDeptId() + "' order by graNumber desc";
		List gradeList = (List) tbgradeService.getAllRowsByWhere(where);
		mav.addObject("gradeList", gradeList);
		mav.setViewName("admin/settime/setsubmit");
		
		return mav;
	}
	
	/**
	 * 提交课题时间
	 *  
	 * @Description  
	 * @author huangzec@foxmail.com
	 * @date 2014-7-16 下午09:12:59
	 * @return ModelAndView
	 */
	@RequestMapping(value="/setsub.do")
	public ModelAndView setSub(HttpServletRequest request, HttpServletResponse response)
	{
		ModelAndView mav 	= new ModelAndView();
		Department department = (Department) request.getSession().getAttribute("department");
		String name 		= request.getParameter("name");
		String granumber 	= request.getParameter("granumber");
		String starttime 	= request.getParameter("start_time");
		String endtime 		= request.getParameter("end_time");
		String mark 		= request.getParameter("mark");
		if(!this._verifyData(request)) {
			mav.addObject("statusCode", 300);
			mav.setViewName("public/ajaxDone");
			
			return mav;
		}
		String where = "from Settime where deptId = '" + 
		department.getDeptId() + "' AND graNumber = '" + granumber + "' AND mark = '" + 
		mark + "'";
		Settime settime = settimeService.getOneByWhere(where);
		if(settime != null) {
			mav.addObject("statusCode", 300);
			mav.addObject("message", "已经设置过该课题时间了");
			mav.setViewName("public/ajaxDone");
			
			return mav;
		}
		settime = new Settime();
		settime.setName(name);
		settime.setDeptId(department.getDeptId());
		settime.setGraNumber(granumber);
		settime.setStartTime(starttime);
		settime.setEndTime(endtime);
		settime.setMark(mark);
		try{
			settimeService.addOneSettime(settime);
			RequestSetAttribute.requestSetAttribute(request, 200, "closeCurrent", "设置成功", "timeorder", "/admin/settime/timeorder.do");
		}catch (Exception e) {
			RequestSetAttribute.requestSetAttribute(request, 300, "", "设置失败", "", "");
		}
		mav.setViewName("public/ajaxDone");
		
		return mav;
	}

	/**
	 * 验证数据
	 *  
	 * @Description  
	 * @author huangzec@foxmail.com
	 * @date 2014-7-16 下午09:18:24
	 * @return boolean
	 */
	protected boolean _verifyData(HttpServletRequest request) {
		String granumber 	= request.getParameter("granumber");
		String starttime 	= request.getParameter("start_time");
		String endtime 		= request.getParameter("end_time");
		if(granumber == null || granumber.trim().equals("")) {
			request.setAttribute("message", "年级不能为空");
			
			return false;
		}
		if(starttime == null || starttime.trim().equals("")) {
			request.setAttribute("message", "开始时间不能为空");
			
			return false;
		}
		if(endtime == null || endtime.trim().equals("")) {
			request.setAttribute("message", "结束时间不能为空");
			
			return false;
		}
		
		return true;
	}
	
	/**
	 * 时间安排
	 *  
	 * @Description  
	 * @author huangzec@foxmail.com
	 * @date 2014-7-17 上午10:21:50
	 * @return ModelAndView
	 */
	@RequestMapping(value="/timeorder.do")
	public ModelAndView timeOrder(HttpServletRequest request, ModelMap modelMap)
	{
		ModelAndView mav = new ModelAndView();
		Department department = (Department) request.getSession().getAttribute("department");
		if(!(request.getParameter("pageNum") == null))
		{
			pageNum = Integer.parseInt(request.getParameter("pageNum"));
		}
		if(!(request.getParameter("numPerPage") == null)) {
			numPerPage = Integer.parseInt(request.getParameter("numPerPage"));
		};
		System.out.println("pageNum =  " + pageNum);
		if(pagination == null){
			pagination = new Pagination(numPerPage);
		}
		pagination.setSize(numPerPage);
		pagination.setCurrentPage(pageNum);
		if(pagination.getCurrentPage() <= 0) {
			pagination.setCurrentPage(1);
		}
		if(pagination.getTotalPage() != 0 && pagination.getCurrentPage() > pagination.getTotalPage()) {
			pagination.setCurrentPage(pagination.getTotalPage());
		}
		String where = "from Settime where deptId = '" + department.getDeptId() + "' order by id desc, startTime desc";
		list = settimeService.getAllRecordByPages(where, pagination);
		if(list == null || list.size() < 1) {
			mav.setViewName("admin/settime/list");
			
			return mav;
		}
		if(this.list.size() == 0 && pagination.getCurrentPage() != 1) {
			pagination.setCurrentPage(pagination.getCurrentPage() - 1);
			list = (List<Settime>) settimeService.getAllRecordByPages(where, pagination);
		}
		RequestSetAttribute.setPageAttribute("", pagination, list, modelMap);
		mav.setViewName("admin/settime/list");
		mav.addObject("department", department);
		
		return mav;
	}

}
