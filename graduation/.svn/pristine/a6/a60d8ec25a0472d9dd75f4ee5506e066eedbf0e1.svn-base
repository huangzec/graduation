package com.mvc.controller;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.ModelAndView;

import com.mvc.common.HResponse;
import com.mvc.common.Pagination;
import com.mvc.common.RequestSetAttribute;
import com.mvc.common.Verify;
import com.mvc.dao.SelectfirstDao;
import com.mvc.entity.Department;
import com.mvc.entity.Selectfirst;
import com.mvc.entity.Settime;
import com.mvc.entity.Tbtopic;
import com.mvc.entity.Teacher;
import com.mvc.service.SettimeService;
import com.mvc.service.TbtopicService;
import com.mvc.service.TeacherService;

/**
 * 课题
 * 
 * @author Happy_Jqc@163.com
 *
 */

@Controller
@RequestMapping(value="/user/topic/")
public class TopicController {
	
	@Autowired
	private TbtopicService tbtopicService;
	
	@Autowired
	private SettimeService settimeService;
	
	@Autowired
	private SelectfirstDao selectfirstDao;
	
	@Autowired
	private TeacherService teacherService;
	
	private Pagination pagination;
	
	private Integer pageNum = 1;

	private int numPerPage = 10;//每页显示多少条
	
	private List<Tbtopic> topicList;
	
	private List<Teacher> list;
	
	public Pagination getPagination() {
		return pagination;
	}

	public void setPagination(Pagination pagination) {
		this.pagination = pagination;
	}

	public Integer getPageNum() {
		return pageNum;
	}

	public void setPageNum(Integer pageNum) {
		this.pageNum = pageNum;
	}

	public int getNumPerPage() {
		return numPerPage;
	}

	public void setNumPerPage(int numPerPage) {
		this.numPerPage = numPerPage;
	}

	public List<Tbtopic> getTopicList() {
		return topicList;
	}

	public void setTopicList(List<Tbtopic> topicList) {
		this.topicList = topicList;
	}

	public List<Teacher> getList() {
		return list;
	}

	public void setList(List<Teacher> list) {
		this.list = list;
	}
	

	/**
	 * 
	 * 进入课题提交页面 
	 * @Description  
	 * @author Happy_Jqc@163.com
	 * @date 2014-7-22 下午5:16:02
	 * @return ModelAndView
	 */
	@RequestMapping(value="intoSubmitTopic.do")
	public ModelAndView intoSubmitTopic(HttpServletRequest request, ModelMap modelMap){
		Integer userStatus = (Integer) request.getSession().getAttribute("user_status");
		_assignSubmitTime(request);
		if (userStatus == 1) {
			return new ModelAndView("user/student/submitTopic");
		} else {
			return new ModelAndView("user/teacher/submitTopic");
		}
	}
	
	/**
	 * 
	 * 加载提交课题时间 
	 * @Description  
	 * @author Happy_Jqc@163.com
	 * @date 2014-8-11 下午05:08:42
	 * @return void
	 */
	private void _assignSubmitTime(HttpServletRequest request){
		Department department = (Department) request.getSession().getAttribute("dept");
		String where = "from Settime where deptId = '" + department.getDeptId() + "' AND mark = '1' AND ('" + HResponse.formatDateTime(new Date()) + "' between startTime and endTime )";
		Settime submitTime 	= settimeService.getOneByWhere(where);
		request.getSession().setAttribute("submit-time", submitTime);
	}
		
	/**
	 * 
	 * 教师课题提交 
	 * @Description  
	 * @author Happy_Jqc@163.com
	 * @date 2014-7-22 下午5:18:00
	 * @return ModelAndView
	 */
	@RequestMapping(value="tea_submitTopic.do")
	public ModelAndView tea_submitTopic(HttpServletRequest request, ModelMap modelMap){
		if(!this._verifyData(request)){
			return new ModelAndView("forward:/user/topic/intoSubmitTopic.do");
		}

		if(!this.isOKSontopic(request)){
			return new ModelAndView("forward:/user/topic/intoSubmitTopic.do");
		}
		
		String user_id = (String) request.getSession().getAttribute("user_id");
		String topId = request.getParameter("topId");
		String topName = request.getParameter("topName");
		String topTec = request.getParameter("topTec");
		int topNum = Integer.parseInt(request.getParameter("topNum"));
		Department dept = (Department) request.getSession().getAttribute("dept");
		
		this._saveTopic(request, topId, topName, topNum, topTec, user_id, dept.getDeptId());
		
		return new ModelAndView("forward:/user/topic/tea_lookTopic.do");
	}

	/**
	 * 
	 * 信息确认 
	 * @Description  
	 * @author Happy_Jqc@163.com
	 * @date 2014-7-24 上午11:24:05
	 * @return boolean
	 */
	private boolean _verifyData(HttpServletRequest request) {
		String topId = request.getParameter("topId");
		String topName = request.getParameter("topName");
		
		if(topId.equals("") || topId == null){
			request.setAttribute("message", "课题编号不能为空！");
			return false;
		}
		if(!this._isTopIdExist(topId)){
			request.setAttribute("message", "课题编号冲突！");
			return false;
		}
		if(topName.equals("") || topName == null){
			request.setAttribute("message", "课题名称不能为空！");
			return false;
		}
		
		if(!this._isTopNameExist(topName)){
			request.setAttribute("message", "课题名称冲突！");
			return false;
		}
		
		if( (Integer) request.getSession().getAttribute("user_status") == 2){
			String topNum = request.getParameter("topNum");
			if(topNum.equals("") || topNum == null){
				request.setAttribute("message", "请选择课题完成人数！");
				return false;
			}
		}
		
		return true;
	}
	
	/**
	 * 
	 * 子课题名称确认 
	 * @Description  
	 * @author Happy_Jqc@163.com
	 * @date 2014-8-15 下午06:56:18
	 * @return boolean
	 */
	private boolean isOKSontopic(HttpServletRequest request) {
		
		int topNum = Integer.parseInt(request.getParameter("topNum"));
		
		if(topNum== 2){
			String sTName1 = request.getParameter("sTName1");
			String sTName2 = request.getParameter("sTName2");
			if(!this._isTopNameExist(sTName1) || !this._isTopNameExist(sTName2) || (sTName1.equals(sTName2))){
				request.setAttribute("message", "子课题名称冲突！");
				return false;
			}
		}
		if(topNum == 3){
			String sTName3 = request.getParameter("sTName3");
			String sTName4 = request.getParameter("sTName4");
			String sTName5 = request.getParameter("sTName5");
			if(!this._isTopNameExist(sTName3) || !this._isTopNameExist(sTName4) || !this._isTopNameExist(sTName5)
				|| sTName3.equals(sTName4) || sTName3.equals(sTName5) || sTName4.equals(sTName5)){
				request.setAttribute("message", "子课题名称冲突！");
				return false;
			}
		}
		if(topNum == 4){
			String sTName6 = request.getParameter("sTName6");
			String sTName7 = request.getParameter("sTName7");
			String sTName8 = request.getParameter("sTName8");
			String sTName9 = request.getParameter("sTName9");
			if(!this._isTopNameExist(sTName6) || !this._isTopNameExist(sTName7) || !this._isTopNameExist(sTName8) 
				|| !this._isTopNameExist(sTName9) || sTName6.equals(sTName7) || sTName6.equals(sTName8) 
				|| sTName6.equals(sTName9) || sTName7.equals(sTName8) || sTName7.equals(sTName9) || sTName8.equals(sTName9)){
				request.setAttribute("message", "子课题名称冲突！");
				return false;
			}
		}
		return true;
	}
	
	/**
	 * 
	 * 判断课题是否已存在 
	 * @Description  
	 * @author Happy_Jqc@163.com
	 * @date 2014-7-24 上午11:44:19
	 * @return boolean
	 */
	private boolean _isTopNameExist(String topName) {
		List<Tbtopic> topicList = tbtopicService.getAll("from Tbtopic");
		for (int i = 0; i < topicList.size(); i++) {
			if (topName.equals(topicList.get(i).getTopName())) {
				return false;
			}
		}
		return true;
	}

	/**
	 * 
	 * 判断课题编号是否冲突 
	 * @Description  
	 * @author Happy_Jqc@163.com
	 * @date 2014-7-24 上午11:44:33
	 * @return boolean
	 */
	private boolean _isTopIdExist(String topId) {
		Tbtopic topic = new Tbtopic();
		topic = tbtopicService.getByTopId(topId);
		if(topic != null){
			return false;
		}
		return true;
	}
	
	
	/**
	 * 
	 * 教师提交添加课题 
	 * @Description  
	 * @author Happy_Jqc@163.com
	 * @date 2014-8-14 上午09:38:18
	 * @return void
	 */
	private void _saveTopic(HttpServletRequest request, String topId, String topName, int topNum,
			String topTec, String userId, String deptId) {
		Tbtopic topic = new Tbtopic();
		topic.setTopId(topId);
		topic.setTopName(topName);
		topic.setTopNumber(topNum);
		topic.setTopTec(topTec);
		topic.setTopCommitId(userId);
		topic.setDeptId(deptId);
		topic.setTopFlag("2");
		topic.setTopStatus("0");
		topic.setParentId("0");
		try{
			tbtopicService.save(topic);
			if(topNum == 2){
				this._saveSonTopic(topId+"1", request.getParameter("sTName1"), userId, 
					topId, deptId, topTec);
				this._saveSonTopic(topId+"2", request.getParameter("sTName2"), userId, 
					topId, deptId, topTec);
			}
			if(topNum == 3){
				this._saveSonTopic(topId+"1", request.getParameter("sTName3"), userId, 
					topId, deptId, topTec);
				this._saveSonTopic(topId+"2", request.getParameter("sTName4"), userId, 
					topId, deptId, topTec);
				this._saveSonTopic(topId+"3", request.getParameter("sTName5"), userId, 
					topId, deptId, topTec);
			}
			if(topNum == 4){
				this._saveSonTopic(topId+"1", request.getParameter("sTName6"), userId, 
					topId, deptId, topTec);
				this._saveSonTopic(topId+"2", request.getParameter("sTName7"), userId, 
					topId, deptId, topTec);
				this._saveSonTopic(topId+"3", request.getParameter("sTName8"), userId, 
					topId, deptId, topTec);
				this._saveSonTopic(topId+"4", request.getParameter("sTName9"), userId, 
					topId, deptId, topTec);
			}
			request.setAttribute("message", "课题提交成功！");
		}catch(Exception e){
			System.out.println(e.toString());
			request.setAttribute("message", "课题提交失败！");
		}
	}

	/**
	 * 
	 * 添加相应子课题 
	 * @Description  
	 * @author Happy_Jqc@163.com
	 * @date 2014-8-14 上午10:00:09
	 * @return void
	 */
	private void _saveSonTopic(String topId, String topName, String userId,
		String parentId, String deptId, String topTec) {
		Tbtopic topic = new Tbtopic();	
		topic.setTopId(topId);
		topic.setTopName(topName);
		topic.setTopNumber(1);
		topic.setTopTec(topTec);
		topic.setTopCommitId(userId);
		topic.setDeptId(deptId);
		topic.setTopFlag("2");
		topic.setTopStatus("0");
		topic.setParentId(parentId);
		try{
			tbtopicService.save(topic);
		}catch(Exception e){
			System.out.println(e.toString());
		}
	}

	/**
	 * 
	 * 学生提交课题 
	 * @Description  
	 * @author Happy_Jqc@163.com
	 * @date 2014-8-7 下午09:21:22
	 * @return ModelAndView
	 */
	@RequestMapping(value="stu_submitTopic.do")
	public ModelAndView stu_submitTopic(HttpServletRequest request, ModelMap modelMap){
		if(!this._verifyData(request)){
			return new ModelAndView("forward:/user/topic/intoSubmitTopic.do");
		}
		
		String user_id = (String) request.getSession().getAttribute("user_id");
		Department dept = (Department) request.getSession().getAttribute("dept");
		
		Tbtopic topic = new Tbtopic();
		topic.setTopId(request.getParameter("topId"));
		topic.setTopName(request.getParameter("topName"));
		topic.setTopNumber(1);
		topic.setTopTec(request.getParameter("topTec"));
		topic.setTopStatus("0");
		topic.setTopCommitId(user_id);
		topic.setTopFlag("1");
		topic.setDeptId(dept.getDeptId());
		topic.setParentId("0");
		try {
			tbtopicService.save(topic);
		} catch (Exception e) {
			System.out.println(e.toString());
		}
		return new ModelAndView("forward:/user/topic/stu_lookTopic.do");
	}
	
	/**
	 * 
	 * 教师查看个人提交的课题 
	 * @Description  
	 * @author Happy_Jqc@163.com
	 * @date 2014-7-28 上午9:45:33
	 * @return ModelAndView
	 */
	@RequestMapping(value="tea_lookTopic.do")
	public ModelAndView tea_lookTopic(HttpServletRequest request, ModelMap modelMap){
		String username = (String) request.getSession().getAttribute("user_id");
		
		_assignlookTime(request);
		
		if(!(request.getParameter("pageNum") == null))
		{
			pageNum = Integer.parseInt(request.getParameter("pageNum"));
		}
		System.out.println("pageNum =  " + pageNum);
		int size = 20;
		if(pagination == null){
			pagination = new Pagination(size);
		}
		pagination.setSize(size);
		pagination.setCurrentPage(pageNum);
		if(pagination.getCurrentPage() <= 0) {
			pagination.setCurrentPage(1);
		}
		if(pagination.getTotalPage() != 0 && pagination.getCurrentPage() > pagination.getTotalPage()) {
			pagination.setCurrentPage(pagination.getTotalPage());
		}
		String where = "from Tbtopic where topCommitId='" + username +"' and parentId='0' order by topId asc";
		topicList = tbtopicService.getAllRecordByPages(where, pagination);
		if(topicList == null || topicList.size() < 1) {
			return new ModelAndView("user/teacher/lookTopic");
		}
		if(this.topicList.size() == 0 && pagination.getCurrentPage() != 1) {
			pagination.setCurrentPage(pagination.getCurrentPage() - 1);
			topicList = (List<Tbtopic>) tbtopicService.getAllRecordByPages(where, pagination);
		}
		modelMap.put("pagination", pagination);
		modelMap.put("topicList", topicList);
		
		String hql = "from Tbtopic where topCommitId='" + username + "' and parentId<>'0' order by topId asc";
		List<Tbtopic> sonTopicList = tbtopicService.getAll(hql);
		System.out.println(sonTopicList.size() + ".......");
		modelMap.put("sonTopicList", sonTopicList);
		return new ModelAndView("user/teacher/lookTopic");
	}
	
	/**
	 * 
	 * 加载查看课题时间
	 * @Description  
	 * @author Happy_Jqc@163.com
	 * @date 2014-8-18 上午10:52:12
	 * @return void
	 */
	private void _assignlookTime(HttpServletRequest request) {
		Department department = (Department) request.getSession().getAttribute("dept");
		String where = "from Settime where deptId = '" + department.getDeptId() + "' AND mark = '4' AND ('" + HResponse.formatDateTime(new Date()) + "' between startTime and endTime )";
		Settime lookTime 	= settimeService.getOneByWhere(where);
		request.getSession().setAttribute("looktime", lookTime);
	}

	/**
	 * 
	 * 学生查看课题 
	 * @Description  
	 * @author Happy_Jqc@163.com
	 * @date 2014-8-16 上午10:22:41
	 * @return ModelAndView
	 */
	@RequestMapping(value="stu_lookTopic.do")
	public ModelAndView stu_lookTopic(HttpServletRequest request, ModelMap modelMap){
		String username = (String) request.getSession().getAttribute("user_id");
		_assignlookTime(request);
		
		if(!(request.getParameter("pageNum") == null))
		{
			pageNum = Integer.parseInt(request.getParameter("pageNum"));
		}
		System.out.println("pageNum =  " + pageNum);
		int size = 20;
		if(pagination == null){
			pagination = new Pagination(size);
		}
		pagination.setSize(size);
		pagination.setCurrentPage(pageNum);
		if(pagination.getCurrentPage() <= 0) {
			pagination.setCurrentPage(1);
		}
		if(pagination.getTotalPage() != 0 && pagination.getCurrentPage() > pagination.getTotalPage()) {
			pagination.setCurrentPage(pagination.getTotalPage());
		}
		String where = "from Tbtopic where topCommitId='" + username +"' order by topId asc";
		topicList = tbtopicService.getAllRecordByPages(where, pagination);
		if(topicList == null || topicList.size() < 1) {
			return new ModelAndView("user/student/lookTopic");
		}
		if(this.topicList.size() == 0 && pagination.getCurrentPage() != 1) {
			pagination.setCurrentPage(pagination.getCurrentPage() - 1);
			topicList = (List<Tbtopic>) tbtopicService.getAllRecordByPages(where, pagination);
		}
		modelMap.put("pagination", pagination);
		modelMap.put("topicList", topicList);
		return new ModelAndView("user/student/lookTopic");
	}

	/**
	 * 
	 * 学生进入选择课题页面 
	 * @Description  
	 * @author Happy_Jqc@163.com
	 * @date 2014-8-8 上午10:54:14
	 * @return ModelAndView
	 */
	@RequestMapping(value="intoSelectTopic.do")
	public ModelAndView selectTopic(HttpServletRequest request, ModelMap modelMap){
		
		String username = (String) request.getSession().getAttribute("user_id");
		_assignSelectTime(request);
		_intoSelectTeacher(request, modelMap);
		
		if(!_assignSelected(request, username, modelMap)){
			return new ModelAndView("user/student/have-selected");
		}else{
			if(pagination == null){
				pagination = new Pagination(numPerPage);
			}
			if(!Verify.isEmpty(request.getParameter("page"))) {
				System.out.println("page " + request.getParameter("page"));
				pageNum = Integer.parseInt(request.getParameter("page"));
			}
			pagination.setSize(numPerPage);
			pagination.setCurrentPage(pageNum);
			if(pagination.getCurrentPage() <= 0) {
				pagination.setCurrentPage(1);
			}
			if(pagination.getTotalPage() != 0 && pagination.getCurrentPage() > pagination.getTotalPage()) {
				pagination.setCurrentPage(pagination.getTotalPage());
			}
			String where = "from Tbtopic where topCommitId='" + username +"' and topStatus='1' order by topId asc";
			topicList = tbtopicService.getAllRecordByPages(where, pagination);
			modelMap.put("pagination", pagination);
			modelMap.put("topicList-student", topicList);
			
			_assignTea(request, modelMap);
			
			return new ModelAndView("user/student/selectTopic");
		}
	}
	
	/**
	 * 
	 * 确认是否已选择课题 
	 * @Description  
	 * @author Happy_Jqc@163.com
	 * @param flag 
	 * @date 2014-8-19 下午08:27:05
	 * @return boolean
	 */
	private boolean _assignSelected(HttpServletRequest request, String username, ModelMap modelMap) {
		List<Selectfirst> selectfirstList = selectfirstDao.getAll("from Selectfirst");
		for (int i = 0; i < selectfirstList.size(); i++) {
			Selectfirst selectfirst = selectfirstList.get(i);
			if(selectfirst.getStuId().equals(username)){
				Teacher teacher;
				if(selectfirst.getTbtopic().getTopFlag().equals("1") && (selectfirst.getTeaId() == null || selectfirst.equals(""))){
					teacher = null;
				}else{
					teacher = teacherService.getOneTeacherById(selectfirst.getTeaId());
				}
				modelMap.put("teacher-info", teacher);
				modelMap.put("select-info", selectfirst);
				return false;
			}
			
		}
		return true;
	}

	/**
	 * 
	 * 加载教师课题 
	 * @Description  
	 * @author Happy_Jqc@163.com
	 * @date 2014-8-19 上午11:33:51
	 * @return ModelAndView
	 */
	public void _assignTea(HttpServletRequest request, ModelMap modelMap){
		
		if(pagination == null){
			pagination = new Pagination(numPerPage);
		}
		if(!Verify.isEmpty(request.getParameter("page"))) {
			System.out.println("page " + request.getParameter("page"));
			pageNum = Integer.parseInt(request.getParameter("page"));
		}
		pagination.setSize(numPerPage);
		pagination.setCurrentPage(pageNum);
		if(pagination.getCurrentPage() <= 0) {
			pagination.setCurrentPage(1);
		}
		if(pagination.getTotalPage() != 0 && pagination.getCurrentPage() > pagination.getTotalPage()) {
			pagination.setCurrentPage(pagination.getTotalPage());
		}
		String where = "from Tbtopic where parentId='0' and topStatus='1' and topFlag='2' order by topId asc";
		topicList = tbtopicService.getAllRecordByPages(where, pagination);
		modelMap.put("topicList-teacher", topicList);
		
		String hql = "from Tbtopic where parentId<>'0' and topStatus='1' and topFlag='2' order by topId asc";
		List<Tbtopic> sonTopicList = tbtopicService.getAll(hql);
		modelMap.put("sonTopicList", sonTopicList);
	}
	
	/**
	 * 
	 * 学生选择课题进入填写课题认识页面 
	 * @Description  
	 * @author Happy_Jqc@163.com
	 * @date 2014-8-11 下午09:28:41
	 * @return ModelAndView
	 */
	@RequestMapping(value="intoWriteKnowing.do")
	public ModelAndView intoWriteKnow(HttpServletRequest request, ModelMap modelMap){
		String topID = request.getParameter("id");
		if(Verify.isEmpty(topID)){
			request.setAttribute("message", "请选择相应课题！");
			return new ModelAndView("forward:/user/topic/intoWriteKnowing.do");
		}
		String where = "from Tbtopic where topId = '" + topID + "'";
		Tbtopic topic = tbtopicService.getAll(where).get(0);
		modelMap.put("topic", topic);
		return new ModelAndView("user/student/writeKnowing");
	}
	
	/**
	 * 
	 * 填写对课题的认识 
	 * @Description  
	 * @author Happy_Jqc@163.com
	 * @date 2014-8-12 下午05:23:50
	 * @return ModelAndView
	 */
	@RequestMapping(value="writeKnowing.do")
	public ModelAndView writeKnowing(HttpServletRequest request, ModelMap modelMap){
		
		String userid = (String) request.getSession().getAttribute("user_id");
		String topId = request.getParameter("topicId");
		Tbtopic topic = tbtopicService.getByTopId(topId);
		Selectfirst selectfirst = new Selectfirst();
		selectfirst.setStuId(userid);
		selectfirst.setTbtopic(topic);
		selectfirst.setSelKnowing(request.getParameter("knowing"));
		selectfirst.setSelStatus("0");
		if(Integer.parseInt(topic.getTopFlag()) == 2){
			selectfirst.setTeaId(topic.getTopCommitId());
		}
		try{
			selectfirstDao.save(selectfirst);
		}catch(Exception e){
			System.out.println(e.toString());
		}
		/**
		 * TODO 修改message
		 */
		request.setAttribute("message", "submit successful!");
		return new ModelAndView("forward:/user/topic/intoSelectTopic.do");
	}
	
	/**
	 * 
	 * 选择指导教师 
	 * @Description  
	 * @author Happy_Jqc@163.com
	 * @date 2014-8-23 上午08:42:58
	 * @return ModelAndView
	 */
	public void _intoSelectTeacher(HttpServletRequest request, ModelMap modelMap){
		Department department = (Department) request.getSession().getAttribute("dept");
		
		if(!(request.getParameter("pageNum") == null))
		{
			pageNum = Integer.parseInt(request.getParameter("pageNum"));
		}
		if(!(request.getParameter("numPerPage") == null)) {
			numPerPage = Integer.parseInt(request.getParameter("numPerPage"));
		}
		System.out.println("numPerPage = " + numPerPage);
		System.out.println("pageNum =  " + pageNum);
		if(pagination == null){
			pagination = new Pagination(numPerPage);
		}
		pagination.setSize(numPerPage);
		pagination.setCurrentPage(pageNum);
		if(pagination.getCurrentPage() <= 0) {
			pagination.setCurrentPage(1);
		}
		if(pagination.getTotalPage() != 0 && pagination.getCurrentPage() > pagination.getTotalPage()) {
			pagination.setCurrentPage(pagination.getTotalPage());
		}
		String where = "from Teacher where deptId = '" + department.getDeptId() + "'";
		list = teacherService.getAllRecordByPages(where, pagination);
		if(this.list.size() == 0 && pagination.getCurrentPage() != 1) {
			pagination.setCurrentPage(pagination.getCurrentPage() - 1);
			list = (List<Teacher>) teacherService.getAllRecordByPages(where, pagination);
		}
		modelMap.put("pagination", pagination);
		modelMap.put("teacher-list", list);
		modelMap.put("depmartment", department);
	}
	
	/**
	 * 
	 * 加载选择课题时间 
	 * @Description  
	 * @author Happy_Jqc@163.com
	 * @date 2014-8-11 下午05:25:22
	 * @return void
	 */
	private void _assignSelectTime(HttpServletRequest request) {
		Department dept = (Department) request.getSession().getAttribute("dept");
		String where  = "from Settime where deptId = '" + dept.getDeptId() + "' AND mark = '3' AND ('" + HResponse.formatDateTime(new Date()) + "' between startTime and endTime )";
		Settime selectTime = settimeService.getOneByWhere(where);
		request.setAttribute("select-time", selectTime);
	}

	
	/**
	 * 查看课题选择情况
	 *  
	 * @Description  
	 * @author huangzec@foxmail.com
	 * @date 2014-8-10 上午10:27:25
	 * @return ModelAndView
	 */
	@RequestMapping(value="/selectcase.do")
	public ModelAndView selectCase(HttpServletRequest request, ModelMap modelMap)
	{
		ModelAndView mav = new ModelAndView();
		mav.setViewName("user/teacher/selectcase-list");
		Department department = (Department) request.getSession().getAttribute("dept");
		String userId = (String) request.getSession().getAttribute("user_id");		
		if(!Verify.isEmpty(request.getParameter("pageNum")))
		{
			pageNum = Integer.parseInt(request.getParameter("pageNum"));
		}
		int size = 10;
		if(Verify.isEmpty(pagination)){
			pagination = new Pagination(size);
		}
		pagination.setSize(size);
		pagination.setCurrentPage(pageNum);
		if(pagination.getCurrentPage() <= 0) {
			pagination.setCurrentPage(1);
		}
		if(pagination.getTotalPage() != 0 && pagination.getCurrentPage() > pagination.getTotalPage()) {
			pagination.setCurrentPage(pagination.getTotalPage());
		}
		String where = "from Tbtopic where topCommitId='" + userId +"' AND topStatus = '1' AND deptId = '" + department.getDeptId() + "' order by topId asc";
		topicList = tbtopicService.getAllRecordByPages(where, pagination);
		//System.out.println("select first " + topicList.get(0).getSelectFirst().iterator().next());
		if(Verify.isEmpty(topicList) || topicList.size() < 1) {
			return mav;
		}
		if(this.topicList.size() == 0 && pagination.getCurrentPage() != 1) {
			pagination.setCurrentPage(pagination.getCurrentPage() - 1);
			topicList = (List<Tbtopic>) tbtopicService.getAllRecordByPages(where, pagination);
		}
		modelMap.put("list", topicList);
		modelMap.put("pagination", pagination);
		
		return mav;
	}
	
}
